{"version":3,"file":"508.bundle.91102e936d4d0c2bd903.js","mappings":"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","sources":["webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js","webpack:///../../../node_modules/lodash.get/index.js"],"sourcesContent":["import macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { DesiredOutputPrecision } from '../../Common/DataModel/DataSetAttributes/Constants.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction offsetCellArray(typedArray, offset) {\n  var currentIdx = 0;\n  return typedArray.map(function (value, index) {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return value;\n    }\n\n    return value + offset;\n  });\n}\n\nfunction appendCellData(dest, src, ptOffset, cellOffset) {\n  dest.set(offsetCellArray(src, ptOffset), cellOffset);\n} // ----------------------------------------------------------------------------\n// vtkAppendPolyData methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkAppendPolyData(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkAppendPolyData');\n\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var numberOfInputs = publicAPI.getNumberOfInputPorts();\n\n    if (!numberOfInputs) {\n      vtkErrorMacro('No input specified.');\n      return;\n    }\n\n    if (numberOfInputs === 1) {\n      // pass through filter\n      outData[0] = inData[0];\n      return;\n    } // Allocate output\n\n\n    var output = vtkPolyData.newInstance();\n    var numPts = 0;\n    var pointType = 0;\n    var ttype = 1;\n    var firstType = 1;\n    var numVerts = 0;\n    var numLines = 0;\n    var numStrips = 0;\n    var numPolys = 0; // Field data is propagated to output only if present in all inputs\n\n    var hasPtNormals = true; // assume present by default\n\n    var hasPtTCoords = true;\n    var hasPtScalars = true;\n\n    for (var i = 0; i < numberOfInputs; i++) {\n      var ds = inData[i];\n\n      if (!ds) {\n        // eslint-disable-next-line\n        continue;\n      }\n\n      var dsNumPts = ds.getPoints().getNumberOfPoints();\n      numPts += dsNumPts;\n      numVerts += ds.getVerts().getNumberOfValues();\n      numLines += ds.getLines().getNumberOfValues();\n      numStrips += ds.getStrips().getNumberOfValues();\n      numPolys += ds.getPolys().getNumberOfValues();\n\n      if (dsNumPts) {\n        if (firstType) {\n          firstType = 0;\n          pointType = ds.getPoints().getDataType();\n        }\n\n        ttype = ds.getPoints().getDataType();\n        pointType = pointType > ttype ? pointType : ttype;\n      }\n\n      var ptD = ds.getPointData();\n\n      if (ptD) {\n        hasPtNormals = hasPtNormals && ptD.getNormals() !== null;\n        hasPtTCoords = hasPtTCoords && ptD.getTCoords() !== null;\n        hasPtScalars = hasPtScalars && ptD.getScalars() !== null;\n      } else {\n        hasPtNormals = false;\n        hasPtTCoords = false;\n        hasPtScalars = false;\n      }\n    }\n\n    if (model.outputPointsPrecision === DesiredOutputPrecision.SINGLE) {\n      pointType = VtkDataTypes.FLOAT;\n    } else if (model.outputPointsPrecision === DesiredOutputPrecision.DOUBLE) {\n      pointType = VtkDataTypes.DOUBLE;\n    }\n\n    var points = vtkPoints.newInstance({\n      dataType: pointType\n    });\n    points.setNumberOfPoints(numPts);\n    var pointData = points.getData();\n    var vertData = new Uint32Array(numVerts);\n    var lineData = new Uint32Array(numLines);\n    var stripData = new Uint32Array(numStrips);\n    var polyData = new Uint32Array(numPolys);\n    var newPtNormals = null;\n    var newPtTCoords = null;\n    var newPtScalars = null;\n    var lds = inData[numberOfInputs - 1];\n\n    if (hasPtNormals) {\n      var dsNormals = lds.getPointData().getNormals();\n      newPtNormals = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        numberOfTuples: numPts,\n        size: 3 * numPts,\n        dataType: dsNormals.getDataType(),\n        name: dsNormals.getName()\n      });\n    }\n\n    if (hasPtTCoords) {\n      var dsTCoords = lds.getPointData().getTCoords();\n      newPtTCoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        numberOfTuples: numPts,\n        size: 2 * numPts,\n        dataType: dsTCoords.getDataType(),\n        name: dsTCoords.getName()\n      });\n    }\n\n    if (hasPtScalars) {\n      var dsScalars = lds.getPointData().getScalars();\n      newPtScalars = vtkDataArray.newInstance({\n        numberOfComponents: dsScalars.getNumberOfComponents(),\n        numberOfTuples: numPts,\n        size: numPts * dsScalars.getNumberOfComponents(),\n        dataType: dsScalars.getDataType(),\n        name: dsScalars.getName()\n      });\n    }\n\n    numPts = 0;\n    numVerts = 0;\n    numLines = 0;\n    numStrips = 0;\n    numPolys = 0;\n\n    for (var _i = 0; _i < numberOfInputs; _i++) {\n      var _ds = inData[_i];\n      pointData.set(_ds.getPoints().getData(), numPts * 3);\n      appendCellData(vertData, _ds.getVerts().getData(), numPts, numVerts);\n      numVerts += _ds.getVerts().getNumberOfValues();\n      appendCellData(lineData, _ds.getLines().getData(), numPts, numLines);\n      numLines += _ds.getLines().getNumberOfValues();\n      appendCellData(stripData, _ds.getStrips().getData(), numPts, numStrips);\n      numStrips += _ds.getStrips().getNumberOfValues();\n      appendCellData(polyData, _ds.getPolys().getData(), numPts, numPolys);\n      numPolys += _ds.getPolys().getNumberOfValues();\n\n      var dsPD = _ds.getPointData();\n\n      if (hasPtNormals) {\n        var ptNorms = dsPD.getNormals();\n        newPtNormals.getData().set(ptNorms.getData(), numPts * 3);\n      }\n\n      if (hasPtTCoords) {\n        var ptTCoords = dsPD.getTCoords();\n        newPtTCoords.getData().set(ptTCoords.getData(), numPts * 2);\n      }\n\n      if (hasPtScalars) {\n        var ptScalars = dsPD.getScalars();\n        newPtScalars.getData().set(ptScalars.getData(), numPts * newPtScalars.getNumberOfComponents());\n      }\n\n      numPts += _ds.getPoints().getNumberOfPoints();\n    }\n\n    output.setPoints(points);\n    output.getVerts().setData(vertData);\n    output.getLines().setData(lineData);\n    output.getStrips().setData(stripData);\n    output.getPolys().setData(polyData);\n\n    if (newPtNormals) {\n      output.getPointData().setNormals(newPtNormals);\n    }\n\n    if (newPtTCoords) {\n      output.getPointData().setTCoords(newPtTCoords);\n    }\n\n    if (newPtScalars) {\n      output.getPointData().setScalars(newPtScalars);\n    }\n\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  outputPointsPrecision: DesiredOutputPrecision.DEFAULT\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.setGet(publicAPI, model, ['outputPointsPrecision']); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1); // Object specific methods\n\n  vtkAppendPolyData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkAppendPolyData'); // ----------------------------------------------------------------------------\n\nvar vtkAppendPolyData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkAppendPolyData$1 as default, extend, newInstance };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n"],"names":["vtkErrorMacro","appendCellData","dest","src","ptOffset","cellOffset","offset","currentIdx","set","map","value","index","DEFAULT_VALUES","outputPointsPrecision","DEFAULT","extend","publicAPI","model","initialValues","arguments","length","undefined","Object","assign","classHierarchy","push","requestData","inData","outData","numberOfInputs","getNumberOfInputPorts","output","numPts","pointType","ttype","firstType","numVerts","numLines","numStrips","numPolys","hasPtNormals","hasPtTCoords","hasPtScalars","i","ds","dsNumPts","getPoints","getNumberOfPoints","getVerts","getNumberOfValues","getLines","getStrips","getPolys","getDataType","ptD","getPointData","getNormals","getTCoords","getScalars","SINGLE","FLOAT","DOUBLE","points","dataType","setNumberOfPoints","pointData","getData","vertData","Uint32Array","lineData","stripData","polyData","newPtNormals","newPtTCoords","newPtScalars","lds","dsNormals","numberOfComponents","numberOfTuples","size","name","getName","dsTCoords","dsScalars","getNumberOfComponents","_i","_ds","dsPD","ptNorms","ptTCoords","ptScalars","setPoints","setData","setNormals","setTCoords","setScalars","vtkAppendPolyData","vtkAppendPolyData$1","newInstance","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","g","freeSelf","self","root","Function","uid","arrayProto","Array","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Symbol","splice","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","this","clear","entry","ListCache","MapCache","assocIndexOf","array","key","other","baseGet","object","path","isArray","type","isSymbol","test","isKey","stringToPath","toKey","baseIsNative","isObject","func","pattern","tag","isFunction","result","e","isHostObject","toSource","getMapData","data","__data__","getValue","has","get","pop","memoize","string","baseToString","match","number","quote","resolver","TypeError","memoized","args","apply","cache","Cache","isObjectLike","module","exports","defaultValue"],"sourceRoot":""}